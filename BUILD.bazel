load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(default_visibility = ["//visibility:public"])

load("@rules_python//python:defs.bzl", "py_library")
load("@rules_python//python:packaging.bzl", "py_wheel")

java_library(
    name = "java_protos_all",
    visibility = ["//visibility:public"],
    exports = [
        "//protos/schemas:common_java_proto",
        "//protos/schemas:document_java_proto",
        "//protos/schemas:search_java_proto",
        "//protos/services:document_service_java_proto",
        "//protos/services:search_service_java_proto",
    ],
)

py_library(
    name = "python_protos_all",
    visibility = ["//visibility:public"],
    deps = [
        "//protos/schemas:common_python_proto",
        "//protos/schemas:document_python_proto",
        "//protos/schemas:search_python_proto",
        "//protos/services:document_service_python_proto",
        "//protos/services:search_service_python_proto",
    ],
)

go_library(
    name = "go_protos_all",
    visibility = ["//visibility:public"],
    deps = [
        "//protos/schemas:common_go_proto",
        "//protos/schemas:document_go_proto",
        "//protos/schemas:search_go_proto",
        "//protos/services:document_service_go_proto",
        "//protos/services:search_service_go_proto",
    ],
)

"""
Package python libraries into a wheel.
Here we seperate schema and service libraries between two py_library definitions and execute
genrules on both to fix the imports. Protoc does not provide a package option for python so we must fix
the import statements in these proto files manually. See issues:
https://github.com/protocolbuffers/protobuf/issues/7061
https://github.com/protocolbuffers/protobuf/issues/2283
"""

py_library(
    name = "opensearch_protos_schemas",
    srcs = [
        "//protos/schemas:common_python_proto",
        "//protos/schemas:document_python_proto",
        "//protos/schemas:search_python_proto",
    ],
)

py_library(
    name = "opensearch_protos_services",
    srcs = [
        "//protos/services:document_service_python_proto",
        "//protos/services:search_service_python_proto",
    ],
    deps = [":opensearch_protos_schemas"],
)

genrule(
    name = "fix_schemas_imports",
    srcs = [":opensearch_protos_schemas"],
    outs = [
        "opensearch/protobufs/schemas/common_pb2.py",
        "opensearch/protobufs/schemas/document_pb2.py",
        "opensearch/protobufs/schemas/search_pb2.py",
        "opensearch/protobufs/schemas/__init__.py",
    ],
    cmd = """
        mkdir -p $(RULEDIR)/opensearch/protobufs/schemas

        for pb in common document search; do
            cp $(BINDIR)/protos/schemas/$${pb}_python_proto_pb/protos/schemas/$${pb}_pb2.py $(RULEDIR)/opensearch/protobufs/schemas/
            sed -i \
                -e 's/from protos\\.schemas import \\([^_ ]\\+\\)_pb2 as protos_dot_schemas_dot_\\1__pb2/from opensearch.protobufs.schemas import \\1_pb2/g' \
                $(RULEDIR)/opensearch/protobufs/schemas/$${pb}_pb2.py
        done

        touch $(RULEDIR)/opensearch/protobufs/schemas/__init__.py
    """,
)

genrule(
    name = "fix_services_imports",
    srcs = [":opensearch_protos_services"],
    outs = [
        "opensearch/protobufs/services/document_service_pb2.py",
        "opensearch/protobufs/services/document_service_pb2_grpc.py",
        "opensearch/protobufs/services/search_service_pb2.py",
        "opensearch/protobufs/services/search_service_pb2_grpc.py",
        "opensearch/protobufs/services/__init__.py",
    ],
    cmd = """
        mkdir -p $(RULEDIR)/opensearch/protobufs/services

        for pb in document_service search_service; do
            cp $(BINDIR)/protos/services/$${pb}_python_proto_pb/protos/services/$${pb}_pb2.py $(RULEDIR)/opensearch/protobufs/services/
            cp $(BINDIR)/protos/services/$${pb}_python_proto_pb/protos/services/$${pb}_pb2_grpc.py $(RULEDIR)/opensearch/protobufs/services/

            # Fix imports in both pb2 and pb2_grpc files
            sed -i \
                -e 's/from protos\\.schemas import/from opensearch.protobufs.schemas import/g' \
                $(RULEDIR)/opensearch/protobufs/services/$${pb}_pb2*.py
        done

        touch $(RULEDIR)/opensearch/protobufs/services/__init__.py
    """,
)

py_library(
    name = "fixed_schemas",
    srcs = [":fix_schemas_imports"],
    imports = ["."],
    visibility = ["//visibility:public"],
)

py_library(
    name = "fixed_services",
    srcs = [":fix_services_imports"],
    imports = ["."],
    deps = [":fixed_schemas"],
    visibility = ["//visibility:public"],
)

py_wheel(
    name = "opensearch_protos_wheel",
    distribution = "opensearch-protobufs",
    python_tag = "py3",
    version = "0.12.0",
    requires = [
        "protobuf>=3.20.3",
        "grpcio>=1.68.1",
    ],
    author = "OpenSearch Team",
    license = "Apache-2.0",
    classifiers = [
        "Intended Audience :: Developers",
        "License :: OSI Approved :: Apache Software License",
        "Programming Language :: Python :: 3",
    ],
    homepage = "https://opensearch.org/",
    project_urls = {
        "Bug Tracker": "https://github.com/opensearch-project/opensearch-protobufs/issues",
        "Documentation": "https://github.com/opensearch-project/opensearch-protobufs/blob/main/README.md",
        "Source Code": "https://github.com/opensearch-project/opensearch-protobufs",
    },
    platform = "any",
    python_requires = ">=3.10",
    deps = [
        ":fixed_schemas",
        ":fixed_services",
    ],
)
